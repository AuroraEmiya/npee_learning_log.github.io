<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据结构 on shyの考研日志</title>
    <link>https://auroraemiya.github.io/npee_learning_log.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
    <description>Recent content in 数据结构 on shyの考研日志</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 21 Jul 2025 17:53:02 +0800</lastBuildDate>
    <atom:link href="https://auroraemiya.github.io/npee_learning_log.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>0721学习日志</title>
      <link>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0721/</link>
      <pubDate>Mon, 21 Jul 2025 17:53:02 +0800</pubDate>
      <guid>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0721/</guid>
      <description>&lt;h2 id=&#34;英语-vocabulary-builder&#34;&gt;英语-vocabulary builder&lt;/h2&gt;&#xA;&lt;p&gt;使用 &lt;code&gt;The Merriam-Webster Vocabulary Builder&lt;/code&gt;作为词根法扩充词汇量的工具书(由网友canon提供)&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;BENE , latin for &lt;code&gt;well&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;benediction&lt;/li&gt;&#xA;&lt;li&gt;benefactor&lt;/li&gt;&#xA;&lt;li&gt;benefaciary&lt;/li&gt;&#xA;&lt;li&gt;benevolence&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;AM, comes form the latin &lt;code&gt;admare&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;amicable&lt;/li&gt;&#xA;&lt;li&gt;enamored&lt;/li&gt;&#xA;&lt;li&gt;amorous&lt;/li&gt;&#xA;&lt;li&gt;paramour&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;BELL,comes from the latin word meaning &lt;code&gt;war&lt;/code&gt;.Bellona was the little-known goddess of war .&#xA;&lt;ul&gt;&#xA;&lt;li&gt;antebellum&lt;/li&gt;&#xA;&lt;li&gt;belligerence&lt;/li&gt;&#xA;&lt;li&gt;bellicose&lt;/li&gt;&#xA;&lt;li&gt;rebellion&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;PAC,is related to the Latin words for &amp;ldquo;agree&amp;rdquo; and &amp;ldquo;peace&amp;rdquo;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;pacify&lt;/li&gt;&#xA;&lt;li&gt;pacifist&lt;/li&gt;&#xA;&lt;li&gt;pact&lt;/li&gt;&#xA;&lt;li&gt;pace&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;操作系统-page--segment&#34;&gt;操作系统-page &amp;amp; segment&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;基本分页内存&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;page&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;page frame&lt;/li&gt;&#xA;&lt;li&gt;page table&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;页号&lt;/th&gt;&#xA;          &lt;th&gt;页内偏移量&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;虚拟地址 = 页号 + 页内偏移&lt;/p&gt;</description>
    </item>
    <item>
      <title>0719学习日志</title>
      <link>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0719/</link>
      <pubDate>Sat, 19 Jul 2025 22:41:19 +0800</pubDate>
      <guid>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0719/</guid>
      <description>&lt;h2 id=&#34;数学-是不动点的味道&#34;&gt;数学-是不动点的味道&lt;/h2&gt;&#xA;&lt;h3 id=&#34;数列的极限&#34;&gt;数列的极限&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;概念&lt;/li&gt;&#xA;&lt;li&gt;数列极限的定义&lt;/li&gt;&#xA;&lt;li&gt;数列收敛的性质&#xA;&lt;ul&gt;&#xA;&lt;li&gt;唯一性&lt;/li&gt;&#xA;&lt;li&gt;有界性&lt;/li&gt;&#xA;&lt;li&gt;保号性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;海涅定理（归结原则）&lt;/li&gt;&#xA;&lt;li&gt;夹逼准则&lt;/li&gt;&#xA;&lt;li&gt;单调有界准则&lt;/li&gt;&#xA;&lt;li&gt;${x_n}$收敛于$a$的速度问题&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;数据结构-前序中序后序blablabla&#34;&gt;数据结构-前序中序后序blablabla&lt;/h2&gt;&#xA;&lt;h3 id=&#34;树的性质&#34;&gt;树的性质&lt;/h3&gt;&#xA;&lt;p&gt;let $T_m$ denote a tree with degree $m$.&lt;/p&gt;&#xA;&lt;p&gt;let $D(n)$ denote the out degree of the node $x$ in the tree $T_m$.&lt;/p&gt;&#xA;&lt;p&gt;let $n_i$ denote the number of notes with degree $i$.&lt;/p&gt;&#xA;&lt;p&gt;let $H$ denote the depth/height of the tree $T_m$.&lt;/p&gt;&#xA;&lt;p&gt;let $N$ denote the total number of nodes in tree.$N=\sum\limits_{i=0}^mn_i$.&lt;/p&gt;&#xA;&lt;p&gt;let $N_i$ denote the number of nodes at layer $i\in \mathcal{N^*}$&lt;/p&gt;</description>
    </item>
    <item>
      <title>0717学习日志</title>
      <link>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0717/</link>
      <pubDate>Thu, 17 Jul 2025 22:04:43 +0800</pubDate>
      <guid>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0717/</guid>
      <description>&lt;h2 id=&#34;数学-纸上得来终觉浅&#34;&gt;数学-纸上得来终觉浅&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;函数极限的定义($\epsilon,\delta$语言)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;函数极限的性质&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;唯一性&lt;/li&gt;&#xA;&lt;li&gt;局部有界性&lt;/li&gt;&#xA;&lt;li&gt;局部保号性&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;无穷小(let $\alpha$ be infinitesimal)&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;性质&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$\sum\limits_{k}^{N}{\alpha_k}=\alpha,(N \text{ is finite})$&lt;/li&gt;&#xA;&lt;li&gt;$\alpha&amp;rsquo;\cdot f(x)=\alpha $,where $f(x)$ is limited at the interval&lt;/li&gt;&#xA;&lt;li&gt;$\prod\limits_{k}^{N}{\alpha_k}=\alpha,(N \text{ is finite})$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;比阶($\lim\alpha(x)=0$,$\lim\beta(x)=0$,$\beta(x)\neq0$)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$\alpha(x)$是$\beta(x)$的高阶无穷小$\Leftrightarrow\lim{\frac{\alpha(x)}{\beta(x)}}=0$&lt;/li&gt;&#xA;&lt;li&gt;$\alpha(x)$是$\beta(x)$的低阶无穷小$\Leftrightarrow\lim{\frac{\alpha(x)}{\beta(x)}}=\infty$&lt;/li&gt;&#xA;&lt;li&gt;$\alpha(x)$是$\beta(x)$的同阶无穷小$\Leftrightarrow\lim{\frac{\alpha(x)}{\beta(x)}}=c,(\text{constant }c\neq 0)$&lt;/li&gt;&#xA;&lt;li&gt;$\alpha(x)$是$\beta(x)$的等价无穷小$\Leftrightarrow\lim{\frac{\alpha(x)}{\beta(x)}}=1$&lt;/li&gt;&#xA;&lt;li&gt;$\alpha(x)$是$\beta(x)$的$k$阶无穷小$\Leftrightarrow\lim{\frac{\alpha(x)}{\beta^k(x)}}=0$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;极限的运算&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;四则运算&lt;/li&gt;&#xA;&lt;li&gt;洛必达法则&lt;/li&gt;&#xA;&lt;li&gt;泰勒展开&lt;/li&gt;&#xA;&lt;li&gt;夹逼准则&lt;/li&gt;&#xA;&lt;li&gt;七种未定式：$\frac{0}{0},\frac{\infty}{\infty},0\cdot\infty,\infty-\infty,\infty^0,0^0,1^{\infty}$&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;函数的连续和两类间断点&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;超实数(&lt;a href=&#34;https://people.math.wisc.edu/~hkeisler/keislercalc-06-18-25.pdf&#34;&gt;hyperreal number&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;操作系统-three-easy-piece&#34;&gt;操作系统-&lt;a href=&#34;https://pages.cs.wisc.edu/~remzi/OSTEP/&#34;&gt;three easy piece&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;cpu-intro&#xA;&lt;ul&gt;&#xA;&lt;li&gt;the Process&lt;/li&gt;&#xA;&lt;li&gt;Process API&#xA;&lt;ol&gt;&#xA;&lt;li&gt;create&lt;/li&gt;&#xA;&lt;li&gt;Destory&lt;/li&gt;&#xA;&lt;li&gt;Wait&lt;/li&gt;&#xA;&lt;li&gt;Miscellaneous Control&lt;/li&gt;&#xA;&lt;li&gt;Status&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Process status&lt;/li&gt;&#xA;&lt;li&gt;Proc data structure:(PCB)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;cpu-api&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;spawn()&lt;/code&gt;*&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;cpu-mechanisms&#xA;&lt;ol&gt;&#xA;&lt;li&gt;from Directed Execution to Limited Directed Execution:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;user mode and kernel mode&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;system call&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;switch between Processes,Os need to retain CPU from process&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A Cooperative Approach: Wait For System Calls&lt;/li&gt;&#xA;&lt;li&gt;A Non-Cooperative Approach: The OS Takes Control&lt;/li&gt;&#xA;&lt;li&gt;reboot (x&lt;/li&gt;&#xA;&lt;li&gt;timer interrupt&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Saving and Restoring Context&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;cpu-sched(reading)&lt;/li&gt;&#xA;&lt;li&gt;cpu-sched-mlfq(reading)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;数据结构-排好队一个一个fifo&#34;&gt;数据结构-排好队一个一个FIFO&lt;/h2&gt;&#xA;&lt;h3 id=&#34;队列&#34;&gt;队列&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;顺序队列的性质和操作&lt;/li&gt;&#xA;&lt;li&gt;循环队列的性质和操作&lt;/li&gt;&#xA;&lt;li&gt;链式队列的性质和操作&lt;/li&gt;&#xA;&lt;li&gt;双端队列&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;code&gt;课程编号018-027&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>0714学习日志</title>
      <link>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0714/</link>
      <pubDate>Mon, 14 Jul 2025 21:15:02 +0800</pubDate>
      <guid>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0714/</guid>
      <description>&lt;h2 id=&#34;操作系统-这什么查一下这什么查一下&#34;&gt;操作系统-这什么查一下这什么查一下&lt;/h2&gt;&#xA;&lt;h3 id=&#34;经典同步问题&#34;&gt;经典同步问题&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;生产者消费者问题&lt;/li&gt;&#xA;&lt;li&gt;哲学家进餐问题&lt;/li&gt;&#xA;&lt;li&gt;读者-写者问题&lt;/li&gt;&#xA;&lt;li&gt;理发师问题&lt;/li&gt;&#xA;&lt;li&gt;抽烟者问题&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;处理机调度&#34;&gt;处理机调度&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;处理及调度的层次&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;高级调度（作业调度、长程调度）&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;作业选择&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;从**后备队列（外存中等待的作业）**中选择作业&lt;/li&gt;&#xA;&lt;li&gt;判断系统资源（内存、CPU、I/O）是否充足&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;资源分配&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;为选中的作业分配内存、I/O、文件等资源&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;进程创建&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;将作业转化为一个或多个&lt;strong&gt;进程&lt;/strong&gt;，放入就绪队列&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;中级调度（内存调度、中程调度）&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;选择部分进程挂起（移出内存到外存）&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;选择挂起的进程恢复（从外存调回内存）&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;低级调度（进程调度、线程调度、短程调度）&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;从&lt;strong&gt;就绪队列&lt;/strong&gt;中选择一个进程&lt;/li&gt;&#xA;&lt;li&gt;把 CPU 分配给选中的进程&lt;/li&gt;&#xA;&lt;li&gt;保存和恢复进程的上下文（&lt;strong&gt;进程切换 Context Switch&lt;/strong&gt;）&lt;/li&gt;&#xA;&lt;li&gt;控制 CPU 的执行顺序&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;处理机的调度方式&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;非抢占式&lt;/li&gt;&#xA;&lt;li&gt;抢占式&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;选择调度算法的若干准则&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CPU利用率&lt;/p&gt;&#xA;$$&#xA;     \frac{\text{worktime of CPU}}{\text{total time}}&#xA;     $$&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;系统吞吐量&lt;/p&gt;&#xA;$$&#xA;     \frac{\text{number of tasks}}{\text{total time}}&#xA;     $$&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;周转时间(Turnaround Time)&lt;/p&gt;&#xA;$$&#xA;     \text{Completion Time - Arrival Time}&#xA;     $$&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;平均周转时间&lt;/p&gt;&#xA;$$&#xA;     \frac{\sum\limits_{N}\text{Turnaround Time of all processes}}{N}&#xA;     $$&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;带权周转时间&lt;/p&gt;&#xA;$$&#xA;     \frac{\text{Turnaround Time}}{\text{Service Time}}&#xA;     $$&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;平均带权周转时间&lt;/p&gt;</description>
    </item>
    <item>
      <title>0711学习日志</title>
      <link>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0711/</link>
      <pubDate>Fri, 11 Jul 2025 20:29:14 +0800</pubDate>
      <guid>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0711/</guid>
      <description>&lt;h2 id=&#34;数据结构-太好了是死记硬背&#34;&gt;数据结构-太好了是死记硬背&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;数据的逻辑和物理结构&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;QQ20250711-202720.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;算法的时间空间复杂度&lt;/li&gt;&#xA;&lt;li&gt;线性表的顺序表以及相关算法&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;课程编号001-009&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;操作系统-想念jyy的第n天&#34;&gt;操作系统-想念jyy的第n天&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;操作系统概述&#xA;&lt;ul&gt;&#xA;&lt;li&gt;并发&lt;/li&gt;&#xA;&lt;li&gt;共享&lt;/li&gt;&#xA;&lt;li&gt;虚拟&lt;/li&gt;&#xA;&lt;li&gt;异步&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;操作系统的发展历程&#xA;&lt;ul&gt;&#xA;&lt;li&gt;批处理器&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单道&lt;/li&gt;&#xA;&lt;li&gt;多道&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;分时操作系统&lt;/li&gt;&#xA;&lt;li&gt;实时操作系统&lt;/li&gt;&#xA;&lt;li&gt;网络操作系统&lt;/li&gt;&#xA;&lt;li&gt;分布式操作系统&lt;/li&gt;&#xA;&lt;li&gt;&amp;hellip;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;课程编号001-002&lt;/code&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
