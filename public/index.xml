<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Shyの考研日志</title>
        <link>https://auroraemiya.github.io/npee_learning_log.github.io/</link>
        <description>Recent content on Shyの考研日志</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 14 Jul 2025 21:15:02 +0800</lastBuildDate><atom:link href="https://auroraemiya.github.io/npee_learning_log.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>0714学习日志</title>
        <link>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0714/</link>
        <pubDate>Mon, 14 Jul 2025 21:15:02 +0800</pubDate>
        
        <guid>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0714/</guid>
        <description>&lt;h2 id=&#34;操作系统-这什么查一下这什么查一下&#34;&gt;操作系统-这什么查一下这什么查一下
&lt;/h2&gt;&lt;h3 id=&#34;经典同步问题&#34;&gt;经典同步问题
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;生产者消费者问题&lt;/li&gt;
&lt;li&gt;哲学家进餐问题&lt;/li&gt;
&lt;li&gt;读者-写者问题&lt;/li&gt;
&lt;li&gt;理发师问题&lt;/li&gt;
&lt;li&gt;抽烟者问题&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;处理机调度&#34;&gt;处理机调度
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;处理及调度的层次&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;高级调度（作业调度、长程调度）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作业选择&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从**后备队列（外存中等待的作业）**中选择作业&lt;/li&gt;
&lt;li&gt;判断系统资源（内存、CPU、I/O）是否充足&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;资源分配&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为选中的作业分配内存、I/O、文件等资源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进程创建&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将作业转化为一个或多个&lt;strong&gt;进程&lt;/strong&gt;，放入就绪队列&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中级调度（内存调度、中程调度）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;选择部分进程挂起（移出内存到外存）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;选择挂起的进程恢复（从外存调回内存）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;低级调度（进程调度、线程调度、短程调度）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;从&lt;strong&gt;就绪队列&lt;/strong&gt;中选择一个进程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;把 CPU 分配给选中的进程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保存和恢复进程的上下文（&lt;strong&gt;进程切换 Context Switch&lt;/strong&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;控制 CPU 的执行顺序&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;处理机的调度方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非抢占式&lt;/li&gt;
&lt;li&gt;抢占式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择调度算法的若干准则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CPU利用率
$$
\frac{\text{worktime of CPU}}{\text{total time}}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;系统吞吐量
$$
\frac{\text{number of tasks}}{\text{total time}}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;周转时间(Turnaround Time)
$$
\text{Completion Time - Arrival Time}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平均周转时间
$$
\frac{\sum\limits_{N}\text{Turnaround Time of all processes}}{N}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;带权周转时间
$$
\frac{\text{Turnaround Time}}{\text{Service Time}}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平均带权周转时间
$$
\frac{\sum\limits_{N}\text{Weighted Turnaround Time of all processes}}{N}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;等待时间&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;调度算法&#34;&gt;调度算法
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;FCFS（先来先服务）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SJF（最短作业优先）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;抢占&lt;/li&gt;
&lt;li&gt;非抢占&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SRTF（最短剩余时间优先）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Priority Scheduling（高优先权优先调度）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;抢占&lt;/li&gt;
&lt;li&gt;非抢占&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Highest Response Ratio Next (HRRN)（高响应比有点调度算法）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Round Robin（时间片轮转）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multilevel Feedback Queue（多级反馈队列调度）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上下文切换&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CPU上下文切换&lt;/li&gt;
&lt;li&gt;系统调用上下文切换&lt;/li&gt;
&lt;li&gt;进程上下文切换
&lt;ul&gt;
&lt;li&gt;用户级&lt;/li&gt;
&lt;li&gt;系统级&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;线程上下文切换&lt;/li&gt;
&lt;li&gt;中断上下文切换&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;数据结构-致敬传奇栈帧pc程序计数器&#34;&gt;数据结构-致敬传奇栈帧PC程序计数器
&lt;/h2&gt;&lt;h3 id=&#34;栈&#34;&gt;栈
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;静态顺序栈&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;判空&lt;/li&gt;
&lt;li&gt;判满&lt;/li&gt;
&lt;li&gt;进栈&lt;/li&gt;
&lt;li&gt;出栈&lt;/li&gt;
&lt;li&gt;获取栈顶元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;动态顺序栈&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;判空&lt;/li&gt;
&lt;li&gt;判满&lt;/li&gt;
&lt;li&gt;进栈&lt;/li&gt;
&lt;li&gt;出栈&lt;/li&gt;
&lt;li&gt;获取栈顶元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;链栈&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;判空&lt;/li&gt;
&lt;li&gt;判满&lt;/li&gt;
&lt;li&gt;进栈&lt;/li&gt;
&lt;li&gt;出栈&lt;/li&gt;
&lt;li&gt;获取栈顶元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;栈的应用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;括号匹配&lt;/li&gt;
&lt;li&gt;进制转换（辗转相除）&lt;/li&gt;
&lt;li&gt;函数递归调用&lt;/li&gt;
&lt;li&gt;表达式求值
&lt;ul&gt;
&lt;li&gt;前缀&lt;/li&gt;
&lt;li&gt;中缀（重要）&lt;/li&gt;
&lt;li&gt;后缀&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;数学-太好了是张宇老师我们有救了&#34;&gt;数学-太好了是张宇老师我们有救了！
&lt;/h2&gt;&lt;h3 id=&#34;函数的概念与特性&#34;&gt;函数的概念与特性
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;函数&lt;/li&gt;
&lt;li&gt;反函数&lt;/li&gt;
&lt;li&gt;复合函数&lt;/li&gt;
&lt;li&gt;隐函数&lt;/li&gt;
&lt;li&gt;函数的四种特性
&lt;ul&gt;
&lt;li&gt;有界性&lt;/li&gt;
&lt;li&gt;单调性&lt;/li&gt;
&lt;li&gt;奇偶性&lt;/li&gt;
&lt;li&gt;周期性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基本初等函数与初等函数
&lt;ul&gt;
&lt;li&gt;常函数&lt;/li&gt;
&lt;li&gt;幂函数&lt;/li&gt;
&lt;li&gt;指数函数&lt;/li&gt;
&lt;li&gt;对数函数&lt;/li&gt;
&lt;li&gt;三角函数
&lt;ol&gt;
&lt;li&gt;sin x  cos x&lt;/li&gt;
&lt;li&gt;csc x sec x&lt;/li&gt;
&lt;li&gt;tan x cot x&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;反三角函数
&lt;ol&gt;
&lt;li&gt;arcsin x arccos x&lt;/li&gt;
&lt;li&gt;arctanx arccot x&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;分段函数&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>0713学习日志</title>
        <link>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0713/</link>
        <pubDate>Sun, 13 Jul 2025 23:27:16 +0800</pubDate>
        
        <guid>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0713/</guid>
        <description>&lt;h2 id=&#34;数据结构-喜欢在头指针存数据的扣1&#34;&gt;数据结构-喜欢在头指针存数据的扣1
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;线性表的链式存储&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单链表&lt;/li&gt;
&lt;li&gt;静态链表&lt;/li&gt;
&lt;li&gt;其他链表
&lt;ul&gt;
&lt;li&gt;单向循环链表&lt;/li&gt;
&lt;li&gt;双向链表&lt;/li&gt;
&lt;li&gt;双向循环链表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;课程代码010-013&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;操作系统-谦让是美德&#34;&gt;操作系统-谦让是美德
&lt;/h2&gt;&lt;h3 id=&#34;进程与线程&#34;&gt;进程与线程
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;进程&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;PCB&lt;/li&gt;
&lt;li&gt;进程的特点：
&lt;ul&gt;
&lt;li&gt;动态性&lt;/li&gt;
&lt;li&gt;并发性&lt;/li&gt;
&lt;li&gt;独立性&lt;/li&gt;
&lt;li&gt;异步性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;进程的基本状态及管理切换
&lt;ul&gt;
&lt;li&gt;运行&lt;/li&gt;
&lt;li&gt;阻塞&lt;/li&gt;
&lt;li&gt;就绪&lt;/li&gt;
&lt;li&gt;创建&lt;/li&gt;
&lt;li&gt;终止&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;线程&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;线程的特性&lt;/li&gt;
&lt;li&gt;线程的状态&lt;/li&gt;
&lt;li&gt;线程与进程的联系和不同&lt;/li&gt;
&lt;li&gt;用户级线程与内核级线程的映射关系&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;互斥与同步&#34;&gt;互斥与同步
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;临界区实现互斥的原则&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;空闲让进&lt;/li&gt;
&lt;li&gt;忙则等待&lt;/li&gt;
&lt;li&gt;有限等待&lt;/li&gt;
&lt;li&gt;让权等待（非必须）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;临界区实现互斥的基本方法&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;软件实现方法
&lt;ol&gt;
&lt;li&gt;单标志法&lt;/li&gt;
&lt;li&gt;双标志法
&lt;ul&gt;
&lt;li&gt;先检查法&lt;/li&gt;
&lt;li&gt;后检查法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Peterson算法&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;硬件实现方法
&lt;ol&gt;
&lt;li&gt;中断屏蔽&lt;/li&gt;
&lt;li&gt;TestAndSet指令&lt;/li&gt;
&lt;li&gt;Swap指令&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;互斥锁（mutex lock）&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;LockOne类&lt;/li&gt;
&lt;li&gt;LockTwo类&lt;/li&gt;
&lt;li&gt;Peterson锁&lt;/li&gt;
&lt;li&gt;Barkley锁&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;信号量&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;整型信号量&lt;/li&gt;
&lt;li&gt;记录型信号量&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;管程&#34;&gt;管程
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;管程的定义&lt;/li&gt;
&lt;li&gt;管程的组成&lt;/li&gt;
&lt;li&gt;管程的特性&lt;/li&gt;
&lt;li&gt;管程与进程的异同&lt;/li&gt;
&lt;li&gt;条件变量&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;进程通信&#34;&gt;进程通信
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;管道通信&lt;/li&gt;
&lt;li&gt;消息传递系统&lt;/li&gt;
&lt;li&gt;共享存储器系统&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;课程编号005-011&lt;/code&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>0713学习笔记</title>
        <link>https://auroraemiya.github.io/npee_learning_log.github.io/memo/0713/</link>
        <pubDate>Sun, 13 Jul 2025 23:27:16 +0800</pubDate>
        
        <guid>https://auroraemiya.github.io/npee_learning_log.github.io/memo/0713/</guid>
        <description>&lt;p&gt;今天看来是无法解决所有当下的疑问了，故先列出清单：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;什么是用户级线程和内核级线程？&lt;/li&gt;
&lt;li&gt;PCB都包含什么？&lt;/li&gt;
&lt;li&gt;访管中断和自陷指令有和关系？&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>0712学习笔记</title>
        <link>https://auroraemiya.github.io/npee_learning_log.github.io/memo/0712/</link>
        <pubDate>Sat, 12 Jul 2025 23:17:40 +0800</pubDate>
        
        <guid>https://auroraemiya.github.io/npee_learning_log.github.io/memo/0712/</guid>
        <description>&lt;h2 id=&#34;操作系统&#34;&gt;操作系统
&lt;/h2&gt;&lt;h3 id=&#34;系统调用&#34;&gt;系统调用
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;功能
&lt;ul&gt;
&lt;li&gt;设备管理：设备的启动、请求和释放等。&lt;/li&gt;
&lt;li&gt;文件管理：文件的读写、创建和删除等。&lt;/li&gt;
&lt;li&gt;进程管理：进程的创建、撤销、阻塞和唤醒等。&lt;/li&gt;
&lt;li&gt;进程通信：进程之间的消息或信号的传递等。&lt;/li&gt;
&lt;li&gt;内存管理：内存的分配、回收以及获取作业占用内存区大小和起始地址等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;处理过程
&lt;ol&gt;
&lt;li&gt;用户程序将系统调用号和所需的参数压入堆栈；接着，调用实际的调用指令，然后执行一个陷入指令，将CPU从用户态转为核心态；再由硬件和操作系统内核程序保护被中断进程的现场。将程序计数器PC、程序状态字PSW及通用寄存器内容压入堆栈。&lt;/li&gt;
&lt;li&gt;分析系统调用类型，转入相应的系统调用处理子程序。在系统中配置了一张系统调用入口表，表中的每个表项都对应一个系统调用，根据系统调用号找到该系统调用处理子程序的入口地址。&lt;/li&gt;
&lt;li&gt;在系统调用处理子程序执行结束后，恢复被中断的或设置新进程的CPU现场，然后返回被中断进程或新进程，继续往下执行。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>暴雨西湖</title>
        <link>https://auroraemiya.github.io/npee_learning_log.github.io/diary/westlake-with-haruko/</link>
        <pubDate>Sat, 12 Jul 2025 22:27:55 +0800</pubDate>
        
        <guid>https://auroraemiya.github.io/npee_learning_log.github.io/diary/westlake-with-haruko/</guid>
        <description>&lt;img src="https://auroraemiya.github.io/npee_learning_log.github.io/diary/westlake-with-haruko/westlake_in_strom.jpg" alt="Featured image of post 暴雨西湖" /&gt;&lt;p&gt;今天带刚来杭州的&lt;strong&gt;太阳&lt;/strong&gt;(应当事人的要求使用该昵称)去西湖游玩。其实天气预报有雨，但东坡先生有诗为证：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;水光潋滟晴方好，山色空蒙雨亦奇。
欲把西湖比西子，淡妆浓抹总相宜。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;雨中西湖，让我陷入无穷大的浪漫遐想和无穷小的现实担忧。&lt;/p&gt;
&lt;p&gt;出了地铁站，人潮涌动；&lt;/p&gt;
&lt;p&gt;走到西湖畔，黑云从远处压来。&lt;/p&gt;
&lt;p&gt;走到白堤，下雨了。&lt;/p&gt;
&lt;p&gt;起先，觉得东坡先生诚不欺我，湖面落入无数雨珠，游船驶向远处，远处的山朦朦胧胧。&lt;/p&gt;
&lt;p&gt;我很兴奋，直到鞋被完全浸湿，直到暴雨驱散所有的游客。还没走完苏堤，到断桥，水已经漫过脚踝。&lt;/p&gt;
&lt;p&gt;最后不得已灰溜溜的挤进公交车，公交车在水中乘风破浪，我们像两株水草。&lt;/p&gt;
&lt;p&gt;虽然结局略微狼狈，不过也略微读懂了东坡先生的另一首诗：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;莫听穿林打叶声，何妨吟啸且徐行。竹杖芒鞋轻胜马，谁怕？一蓑烟雨任平生。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;“因为在雨中，我们看着落下雨幕的远方，牵着手笑着前行。”&lt;/p&gt;
</description>
        </item>
        <item>
        <title>0712学习日志</title>
        <link>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0712/</link>
        <pubDate>Sat, 12 Jul 2025 22:05:39 +0800</pubDate>
        
        <guid>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0712/</guid>
        <description>&lt;h2 id=&#34;操作系统-int-0x80&#34;&gt;操作系统-int 0x80
&lt;/h2&gt;&lt;p&gt;操作系统的运行环境&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内核程序
&lt;ul&gt;
&lt;li&gt;特权指令&lt;/li&gt;
&lt;li&gt;核心态，管态&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;应用程序
&lt;ul&gt;
&lt;li&gt;非特权指令&lt;/li&gt;
&lt;li&gt;用户态，目态&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;操作系统的内核&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;时钟管理&lt;/li&gt;
&lt;li&gt;中断机制
&lt;ol&gt;
&lt;li&gt;内部异常
&lt;ol&gt;
&lt;li&gt;故障（Fault）（软件中断）&lt;/li&gt;
&lt;li&gt;自陷（Trap）（软件中断）&lt;/li&gt;
&lt;li&gt;终止（Abort）（硬件中断）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;外部中断（硬件）
&lt;ol&gt;
&lt;li&gt;可屏蔽中断 INTR&lt;/li&gt;
&lt;li&gt;不可屏蔽中断 NMI&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;课程编号 ：003-004&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;英语-英语构词法&#34;&gt;英语-英语构词法
&lt;/h2&gt;&lt;p&gt;前缀包含两种作用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方向&lt;/li&gt;
&lt;li&gt;性质&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;后缀一般表示词性，例外：able,&amp;hellip;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>0711学习日志</title>
        <link>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0711/</link>
        <pubDate>Fri, 11 Jul 2025 20:29:14 +0800</pubDate>
        
        <guid>https://auroraemiya.github.io/npee_learning_log.github.io/posts/0711/</guid>
        <description>&lt;h2 id=&#34;数据结构-太好了是死记硬背&#34;&gt;数据结构-太好了是死记硬背
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;数据的逻辑和物理结构&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://auroraemiya.github.io/npee_learning_log.github.io/posts/0711/QQ20250711-202720.png&#34;
	width=&#34;1702&#34;
	height=&#34;743&#34;
	srcset=&#34;https://auroraemiya.github.io/npee_learning_log.github.io/posts/0711/QQ20250711-202720_hu_ab8a865d16a46851.png 480w, https://auroraemiya.github.io/npee_learning_log.github.io/posts/0711/QQ20250711-202720_hu_5cae573c8a98f94d.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;229&#34;
		data-flex-basis=&#34;549px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;算法的时间空间复杂度&lt;/li&gt;
&lt;li&gt;线性表的顺序表以及相关算法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;课程编号001-009&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;操作系统-想念jyy的第n天&#34;&gt;操作系统-想念jyy的第n天
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;操作系统概述
&lt;ul&gt;
&lt;li&gt;并发&lt;/li&gt;
&lt;li&gt;共享&lt;/li&gt;
&lt;li&gt;虚拟&lt;/li&gt;
&lt;li&gt;异步&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;操作系统的发展历程
&lt;ul&gt;
&lt;li&gt;批处理器
&lt;ul&gt;
&lt;li&gt;单道&lt;/li&gt;
&lt;li&gt;多道&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;分时操作系统&lt;/li&gt;
&lt;li&gt;实时操作系统&lt;/li&gt;
&lt;li&gt;网络操作系统&lt;/li&gt;
&lt;li&gt;分布式操作系统&lt;/li&gt;
&lt;li&gt;&amp;hellip;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;课程编号001-002&lt;/code&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Intro-全部の始まり</title>
        <link>https://auroraemiya.github.io/npee_learning_log.github.io/diary/intro/</link>
        <pubDate>Fri, 11 Jul 2025 16:35:21 +0800</pubDate>
        
        <guid>https://auroraemiya.github.io/npee_learning_log.github.io/diary/intro/</guid>
        <description>&lt;h2 id=&#34;写在一切的前面&#34;&gt;写在一切的前面
&lt;/h2&gt;&lt;p&gt;欢迎来到我的博客，这是我 （笔者自称小shy)为了记录参加2026考研全过程而开始的新栏目。&lt;/p&gt;
&lt;p&gt;我准备参加今年年底的2026NPEE(The national entrance examination for postgraduate)，科目是11408。&lt;/p&gt;
&lt;p&gt;此后我将更新自己从7月初到12月底的备考全过程日志，具体包括三个栏目：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;日记&lt;/strong&gt;：这个部分属于随便写点感想什么的（随缘更新）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;日志&lt;/strong&gt;：这个部分属于日常更新自己的学习/复习进度，欢迎监督！&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;笔记&lt;/strong&gt;：这个部分用于记录自己的学习心得和一些易错知识点。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可能以后还会补充，但是目前就先这样。&lt;/p&gt;
&lt;p&gt;联系方式可能以后会留一个收信的邮箱，这里打一个(&lt;strong&gt;TODO&lt;/strong&gt;)（笑&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
