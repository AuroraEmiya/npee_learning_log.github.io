<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Gcc Man on shyの考研日志</title>
        <link>http://localhost:1313/npee_learning_log.github.io/tags/gcc-man/</link>
        <description>Recent content in Gcc Man on shyの考研日志</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 30 Jul 2025 23:44:55 +0800</lastBuildDate><atom:link href="http://localhost:1313/npee_learning_log.github.io/tags/gcc-man/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>0730学习笔记</title>
        <link>http://localhost:1313/npee_learning_log.github.io/memo/0730/</link>
        <pubDate>Wed, 30 Jul 2025 23:44:55 +0800</pubDate>
        
        <guid>http://localhost:1313/npee_learning_log.github.io/memo/0730/</guid>
        <description>&lt;h2 id=&#34;gcc-manual-rtfm&#34;&gt;GCC manual-RTFM
&lt;/h2&gt;&lt;p&gt;今天心血来潮想要拜读&lt;code&gt;gcc&lt;/code&gt;man page，学到很多。有时候会思考，AI确实帮助了我快速上手一个领域，比如使用Rust编写一个植物大战僵尸的游戏，比如从零开始认识一个代码，但是一旦结束之后，回头再想就很难说我仍然可以再举一反三地做另一个好玩的事情，事实上Rust的语法和特性我也几乎忘记。&lt;/p&gt;
&lt;p&gt;jyy老师在课堂上曾经向我们展示了许多很好玩的代码，很有意思的命令行，也曾经嘱咐我们一定要RTFM(Read The Friendly Manual)，现在的我毕业了，同时仍然是AI的重度依赖者，只是心里一直有一个地方在不断的问自己：AI的回答能否坦然接受？&lt;/p&gt;
&lt;p&gt;我的答案一直是：NO&lt;/p&gt;
&lt;p&gt;我始终在拥抱AI的同时留有一丝怀疑和谨慎。&lt;/p&gt;
&lt;p&gt;这是man page的部分内容，权当记录，明天还要更新更多的笔记。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME      
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       gcc &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; GNU project C and C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; compiler
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       gcc [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;|-&lt;/span&gt;S&lt;span style=&#34;color:#f92672&#34;&gt;|-&lt;/span&gt;E] [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;std&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;standard]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;g] [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pg] [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Olevel]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wwarn...] [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wpedantic]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Idir...] [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Ldir...]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Dmacro[&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;defn]...] [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Umacro]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;foption...] [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mmachine&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;option...]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;o outfile] [&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;file] infile...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Only the most useful options are listed here; see below &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       remainder.  g&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; accepts mostly the same options as gcc.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DESCRIPTION      
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       When you invoke GCC, it normally does preprocessing, compilation,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       assembly and linking.  The &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;overall options&amp;#34;&lt;/span&gt; allow you to stop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       this process at an intermediate stage.  For example, the &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c option
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       says not to run the linker.  Then the output consists of object
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       files output by the assembler.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Other options are passed on to one or more stages of processing.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Some options control the preprocessor and others the compiler
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       itself.  Yet other options control the assembler and linker; most
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       of these are not documented here, since you rarely need to use any
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       of them.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Most of the command&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;line options that you can use with GCC are
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       useful &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; C programs; when an option is only useful with another
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#a6e22e&#34;&gt;language&lt;/span&gt; (usually C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;), the explanation says so explicitly.  If
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       the description &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a particular option does not mention a source
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       language, you can use that option with all supported languages.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       The usual way to run GCC is to run the executable called gcc, or
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       machine&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;gcc when cross&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;compiling, or machine&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;gcc&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;version to run a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       specific version of GCC.  When you compile C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; programs, you
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       should invoke GCC as g&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; instead.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       The gcc program accepts options and file names as operands.  Many
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       options have multi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;letter names; therefore multiple single&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;letter
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       options may not be grouped: &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dv is very different from &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;d &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;v.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       You can mix options and other arguments.  For the most part, the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       order you use doesn&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;t matter.  Order does matter when you use
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       several options of the same kind; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; example, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you specify &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;L
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       more than once, the directories are searched in the order
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       specified.  Also, the placement of the &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;l option is significant.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Many options have &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; names starting with &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;f or with &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;W&lt;span style=&#34;color:#f92672&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       example, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fmove&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;loop&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;invariants, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wformat and so on.  Most of
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       these have both positive and negative forms; the negative form of
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ffoo is &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;foo.  This manual documents only one of these two
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       forms, whichever one is not the &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Some options take one or more arguments typically separated either
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       by a space or by the equals &lt;span style=&#34;color:#a6e22e&#34;&gt;sign&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;) from the option name.  Unless
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       documented otherwise, an argument can be either numeric or a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       string.  Numeric arguments must typically be small &lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       decimal or hexadecimal integers.  Hexadecimal arguments must begin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       with the &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;x prefix.  Arguments to options that specify a size
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       threshold of some sort may be arbitrarily large decimal or
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       hexadecimal integers followed by a byte size suffix designating a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       multiple of bytes such as &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kB&amp;#34;&lt;/span&gt; and &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;KiB&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; kilobyte and
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       kibibyte, respectively, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MB&amp;#34;&lt;/span&gt; and &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MiB&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; megabyte and mebibyte,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GB&amp;#34;&lt;/span&gt; and &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GiB&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; gigabyte and gigibyte, and so on.  Such
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       arguments are designated by byte&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;size in the following text.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Refer to the NIST, IEC, and other relevant national and
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       international standards &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the full listing and explanation of
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       the binary and decimal byte size prefixes.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Option Summary
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Here is a summary of all the options, grouped by type.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Explanations are in the following sections.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Overall Options
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;S  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;E  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;o file  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;x language &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;v  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;###&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help[&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;class[,...]]  &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;target&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;help  &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pass&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;exit&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;codes  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pipe  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;specs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;file  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;wrapper &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ffile&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;prefix&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;map&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;old&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;new &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fplugin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;file  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fplugin&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;arg&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;arg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fdump&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ada&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;spec[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;slim]  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fada&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;spec&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;parent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;unit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fdump&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;go&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;spec&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       C Language Options
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ansi  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;std&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;standard  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fgnu89&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;inline&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fpermitted&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;flt&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;eval&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;methods&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;standard &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;aux&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;info filename
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fallow&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;parameterless&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;variadic&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;functions &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;asm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;builtin  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;builtin&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;function  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fgimple &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fhosted
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ffreestanding &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fopenacc  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fopenacc&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dim&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;geom &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fopenmp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fopenmp&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;simd &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fms&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;extensions  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fplan9&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;extensions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fsso&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;endianness &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fallow&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;single&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;precision
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fcond&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mismatch  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;flax&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;conversions &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fsigned&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;bitfields
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fsigned&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;funsigned&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;bitfields  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;funsigned&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; Language Options
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fabi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;access&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;control &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;faligned&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;new&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fargs&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;in&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;order&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fchar8_t&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fcheck&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;new &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fconstexpr&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;depth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fconstexpr&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;loop&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;limit&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fconstexpr&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ops&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;limit&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;elide&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;constructors &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;enforce&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;eh&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;specs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;gnu&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;keywords &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;implicit&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;templates
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;implicit&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;inline&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;templates &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;implement&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;inlines
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fms&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;extensions &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fnew&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;inheriting&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ctors &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fnew&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ttp&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;matching
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;nonansi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;builtins  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fnothrow&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;opt  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;operator&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;names
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;optional&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;diags  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fpermissive &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pretty&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;templates &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;frepo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rtti  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fsized&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;deallocation &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ftemplate&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;backtrace&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;limit&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ftemplate&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;depth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;threadsafe&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;statics  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fuse&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cxa&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;atexit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;weak  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;nostdinc&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fvisibility&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;inlines&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;hidden
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fvisibility&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ms&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;compat &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fext&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;numeric&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;literals &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wabi&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wabi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tag  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wconversion&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;null  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wctor&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dtor&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;privacy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wdelete&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;non&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;virtual&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dtor  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wdeprecated&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;copy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wdeprecated&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;copy&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dtor &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wliteral&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;suffix &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wmultiple&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;inheritance
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;init&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;list&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;lifetime &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wnamespaces  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wnarrowing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wpessimizing&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;move  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wredundant&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;move &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wnoexcept
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wnoexcept&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;type  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wclass&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;memaccess &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wnon&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;virtual&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dtor
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wreorder  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wregister &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Weffc&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wstrict&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;null&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;sentinel
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wtemplates &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;non&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;template&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;friend  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wold&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cast
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Woverloaded&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;virtual  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pmf&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;conversions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;class&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;conversion  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;terminate &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wsign&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;promo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wvirtual&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;inheritance
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Preprocessor Options
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Aquestion&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;answer &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;A&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;question[&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;answer] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;C  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;CC  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Dmacro[&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;defn]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dD  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dI  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dM  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dN  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dU &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fdebug&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cpp  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fdirectives&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;only
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fdollars&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;in&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;identifiers &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fexec&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;charset&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;charset
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fextended&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;identifiers &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;finput&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;charset&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;charset
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fmacro&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;prefix&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;map&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;old&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;new &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;canonical&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;system&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;headers
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fpch&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;deps  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fpch&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;preprocess &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fpreprocessed  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ftabstop&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;width
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ftrack&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;macro&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;expansion &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fwide&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;exec&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;charset&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;charset
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fworking&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;directory &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;H  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;imacros file  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;include file &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;M  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;MD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;MF  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;MG  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;MM  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;MMD  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;MP  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;MQ  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;MT &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;integrated&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cpp  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;P
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pthread  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;remap &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;traditional  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;traditional&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cpp  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;trigraphs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Umacro  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;undef &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wp,option  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Xpreprocessor option
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Assembler Options
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wa,option  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Xassembler option
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Linker Options
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           object&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;name  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fuse&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ld&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;linker  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;llibrary &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;nostartfiles
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;nodefaultlibs  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;nolibc  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;nostdlib &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;e entry  &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;entry&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;entry
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pie  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pthread  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rdynamic &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;s  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pie
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;libgcc  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;libstdc&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;libasan
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;libtsan  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;liblsan  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;libubsan &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;shared
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;shared&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;libgcc  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;symbolic &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;T script  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wl,option  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Xlinker
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           option &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;u symbol  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;z keyword
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Directory Options
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Bprefix  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Idir  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;I&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;idirafter dir &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;imacros file  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;imultilib
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           dir &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;iplugindir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dir  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;iprefix file &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;iquote dir  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;isysroot dir
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;isystem dir &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;iwithprefix dir  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;iwithprefixbefore dir &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Ldir
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;canonical&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;prefixes  &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;sysroot&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;suffix &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;nostdinc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;nostdinc&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;sysroot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dir
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Code Generation Options
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fcall&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;saved&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;reg  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fcall&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;used&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;reg &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ffixed&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;reg  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fexceptions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fnon&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;call&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;exceptions  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fdelete&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dead&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;exceptions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;funwind&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tables &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fasynchronous&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;unwind&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tables &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;gnu&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;unique
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;finhibit&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;size&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;directive  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;common  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ident
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fpcc&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fpic  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fPIC  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fpie  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fPIE  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;plt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fno&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;jump&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tables &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;frecord&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;gcc&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;switches &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;freg&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fshort&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;enums  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fshort&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;wchar &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fverbose&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;asm&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fpack&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;[&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fleading&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;underscore  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ftls&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;model&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;model
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fstack&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;reuse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;reuse_level &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ftrampolines  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ftrapv  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fwrapv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fvisibility&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;internal&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;hidden&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;protected]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fstrict&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;volatile&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;bitfields  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fsync&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;libcalls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      For any given input file, the file name suffix determines what
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       kind of compilation is done:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           C source code that must be preprocessed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.i
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           C source code that should not be preprocessed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.ii
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; source code that should not be preprocessed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;C source code.  Note that you must link with the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           libobjc library to make an Objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;C program work.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.mi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;C source code that should not be preprocessed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.mm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.M
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; source code.  Note that you must link with the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           libobjc library to make an Objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; program work.  Note
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           that .M refers to a literal capital M.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.mii
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; source code that should not be preprocessed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           C, C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;, Objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;C or Objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; header file to be turned
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           into a precompiled &lt;span style=&#34;color:#a6e22e&#34;&gt;header&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;), or C, C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; header file to
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           be turned into an Ada &lt;span style=&#34;color:#a6e22e&#34;&gt;spec&lt;/span&gt; (via the &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fdump&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ada&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;spec &lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt;).
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.cc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.cp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.cxx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.cpp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.CPP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.c&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.C
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; source code that must be preprocessed.  Note that in .cxx,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           the last two letters must both be literally x.  Likewise, .C
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           refers to a literal capital C.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.mm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.M
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; source code that must be preprocessed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.mii
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; source code that should not be preprocessed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.hh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.H
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.hp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.hxx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.hpp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.HPP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.h&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.tcc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; header file to be turned into a precompiled header or Ada
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           spec.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.f
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.ftn
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Fixed form Fortran source code that should not be
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           preprocessed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.F
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.FOR
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.fpp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.FPP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.FTN
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Fixed form Fortran source code that must be &lt;span style=&#34;color:#a6e22e&#34;&gt;preprocessed&lt;/span&gt; (with
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           the traditional preprocessor).
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.f90
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.f95
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.f03
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.f08
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Free form Fortran source code that should not be preprocessed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.F90
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.F95
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.F03
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.F08
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Free form Fortran source code that must be &lt;span style=&#34;color:#a6e22e&#34;&gt;preprocessed&lt;/span&gt; (with
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           the traditional preprocessor).
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.go
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Go source code.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.brig
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           BRIG &lt;span style=&#34;color:#a6e22e&#34;&gt;files&lt;/span&gt; (binary representation of HSAIL).
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           D source code.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.di
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           D interface file.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.dd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           D documentation &lt;span style=&#34;color:#a6e22e&#34;&gt;code&lt;/span&gt; (Ddoc).
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.ads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Ada source code file that contains a library unit &lt;span style=&#34;color:#a6e22e&#34;&gt;declaration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           (a declaration of a package, subprogram, or generic, or a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           generic instantiation), or a library unit renaming &lt;span style=&#34;color:#a6e22e&#34;&gt;declaration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           (a package, generic, or subprogram renaming declaration).
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Such files are also called specs.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.adb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Ada source code file containing a library unit &lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt; (a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           subprogram or package body).  Such files are also called
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           bodies.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Assembler code.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.S
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       file.sx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Assembler code that must be preprocessed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       other
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           An object file to be fed straight into linking.  Any file name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           with no recognized suffix is treated this way.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       You can specify the input language explicitly with the &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;x option:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;x language
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Specify explicitly the language &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the following input &lt;span style=&#34;color:#a6e22e&#34;&gt;files&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           (rather than letting the compiler choose a &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; based on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           the file name suffix).  This option applies to all following
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           input files until the next &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;x option.  Possible values &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           language are:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   c  c&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;header  cpp&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;output
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   c&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;  c&lt;span style=&#34;color:#f92672&#34;&gt;++-&lt;/span&gt;header  c&lt;span style=&#34;color:#f92672&#34;&gt;++-&lt;/span&gt;cpp&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;output
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c  objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;header  objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cpp&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;output
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;++-&lt;/span&gt;header objective&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;++-&lt;/span&gt;cpp&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;output
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   assembler  assembler&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cpp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   ada
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   f77  f77&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cpp&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;input f95  f95&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cpp&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;input
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   go
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   brig
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;x none
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Turn off any specification of a language, so that subsequent
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           files are handled according to their file name &lt;span style=&#34;color:#a6e22e&#34;&gt;suffixes&lt;/span&gt; (as
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           they are &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;x has not been used at all).
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       If you only want some of the stages of compilation, you can use &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       (or filename suffixes) to tell gcc where to start, and one of the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       options &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;S, or &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;E to say where gcc is to stop.  Note that some
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#a6e22e&#34;&gt;combinations&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; example, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;x cpp&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;output &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;E) instruct gcc to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       nothing at all.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c  Compile or assemble the source files, but &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not link.  The
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           linking stage simply is not done.  The ultimate output is in
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           the form of an object file &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each source file.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           By &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;, the object file name &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a source file is made by
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           replacing the suffix .c, .i, .s, etc., with .o.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Unrecognized input files, not requiring compilation or
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           assembly, are ignored.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;S  Stop after the stage of compilation proper; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not assemble.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           The output is in the form of an assembler code file &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           non&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;assembler input file specified.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           By &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;, the assembler file name &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a source file is made
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           by replacing the suffix .c, .i, etc., with .s.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Input files that don&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;t require compilation are ignored.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;E  Stop after the preprocessing stage; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not run the compiler
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           proper.  The output is in the form of preprocessed source
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           code, which is sent to the standard output.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Input files that don&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;t require preprocessing are ignored.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;o file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Place output in file file.  This applies to whatever sort of
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           output is being produced, whether it be an executable file, an
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           object file, an assembler file or preprocessed C code.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           If &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;o is not specified, the &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; is to put an executable
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           file in a.out, the object file &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; source.suffix in source.o,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           its assembler file in source.s, a precompiled header file in
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           source.suffix.gch, and all preprocessed C source on standard
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           output.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;v  &lt;span style=&#34;color:#a6e22e&#34;&gt;Print&lt;/span&gt; (on standard error output) the commands executed to run
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           the stages of compilation.  Also print the version number of
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           the compiler driver program and of the preprocessor and the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           compiler proper.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;###&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Like &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;v except the commands are not executed and arguments are
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           quoted unless they contain only alphanumeric characters or
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./-_&amp;#34;&lt;/span&gt;.  This is useful &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; shell scripts to capture the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           driver&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;generated command lines.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#a6e22e&#34;&gt;Print&lt;/span&gt; (on the standard output) a description of the command&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           line options understood by gcc.  If the &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;v option is also
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           specified then &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help is also passed on to the various
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           processes invoked by gcc, so that they can display the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           command&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;line options they accept.  If the &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Wextra option has
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           also been &lt;span style=&#34;color:#a6e22e&#34;&gt;specified&lt;/span&gt; (prior to the &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help option), then
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           command&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;line options that have no documentation associated
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           with them are also displayed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;target&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;help
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#a6e22e&#34;&gt;Print&lt;/span&gt; (on the standard output) a description of target&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           specific command&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;line options &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each tool.  For some targets
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           extra target&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;specific information may also be printed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{class&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;[&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;]qualifier}[,...]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#a6e22e&#34;&gt;Print&lt;/span&gt; (on the standard output) a description of the command&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           line options understood by the compiler that fit into all
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           specified classes and qualifiers.  These are the supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           classes:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           optimizers
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               Display all of the optimization options supported by the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               compiler.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           warnings
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               Display all of the options controlling warning messages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               produced by the compiler.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           target
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               Display target&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;specific options.  Unlike the &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;target&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;help
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               option however, target&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;specific options of the linker and
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               assembler are not displayed.  This is because those tools
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not currently support the extended &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; syntax.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           params
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               Display the values recognized by the &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;param option.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           language
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               Display the options supported &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; language, where language
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               is the name of one of the languages supported in this
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               version of GCC.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           common
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               Display the options that are common to all languages.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           These are the supported qualifiers:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           undocumented
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               Display only those options that are undocumented.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           joined
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               Display options taking an argument that appears after an
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               equal sign in the same continuous piece of text, such as:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;target.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           separate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               Display options taking an argument that appears as a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               separate word following the original option, such as: &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;o
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               output&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;file.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Thus &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; example to display all the undocumented target&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           specific switches supported by the compiler, use:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;target,undocumented
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           The sense of a qualifier can be inverted by prefixing it with
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           the &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt; character, so &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; example to display all binary warning
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt; (i.e., ones that are either on or off and that &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           take an argument) that have a description, use:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;warnings,&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;joined,&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;undocumented
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           The argument to &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; should not consist solely of inverted
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           qualifiers.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Combining several classes is possible, although this usually
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           restricts the output so much that there is nothing to display.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           One &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; where it does work, however, is when one of the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           classes is target.  For example, to display all the target&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           specific optimization options, use:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;target,optimizers
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           The &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; option can be repeated on the command line.  Each
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           successive use displays its requested class of options,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           skipping those that have already been displayed.  If &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help is
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           also specified anywhere on the command line then this takes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           precedence over any &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; option.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           If the &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Q option appears on the command line before the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; option, then the descriptive text displayed by &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           is changed.  Instead of describing the displayed options, an
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           indication is given as to whether the option is enabled,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           disabled or set to a specific &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt; (assuming that the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           compiler knows this at the point where the &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; option is
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           used).
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Here is a truncated example from the ARM port of gcc:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                     &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; gcc &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Q &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mabi&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;target &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                     The following options are target specific:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                     &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mabi&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;                                &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                     &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mabort&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;on&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;noreturn                   [disabled]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                     &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mapcs                                [disabled]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           The output is sensitive to the effects of previous command&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           line options, so &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; example it is possible to find out which
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           optimizations are enabled at &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;O2 by using:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Q &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;O2 &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;optimizers
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Alternatively you can discover which binary optimizations are
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           enabled by &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;O3 by using:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   gcc &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Q &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;O3 &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;optimizers &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;tmp&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;O3&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;opts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   gcc &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Q &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;O2 &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;optimizers &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;tmp&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;O2&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;opts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   diff &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;tmp&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;O2&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;opts &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;tmp&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;O3&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;opts &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; grep enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Display the version number and copyrights of the invoked GCC.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pass&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;exit&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;codes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Normally the gcc program exits with the code of &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; any phase
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           of the compiler returns a non&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;success &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; code.  If you
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           specify &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pass&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;exit&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;codes, the gcc program instead returns with
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           the numerically highest error produced by any phase returning
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           an error indication.  The C, C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;, and Fortran front ends
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; an internal compiler error is encountered.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pipe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Use pipes rather than temporary files &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; communication
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           between the various stages of compilation.  This fails to work
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           on some systems where the assembler is unable to read from a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           pipe; but the GNU assembler has no trouble.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;specs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Process file after the compiler reads in the standard specs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           file, in order to override the defaults which the gcc driver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           program uses when determining what switches to pass to cc1,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           cc1plus, as, ld, etc.  More than one &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;specs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;file can be
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           specified on the command line, and they are processed in
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           order, from left to right.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;wrapper
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Invoke all subcommands under a wrapper program.  The name of
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           the wrapper program and its parameters are passed as a comma
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           separated list.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   gcc &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c t.c &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;wrapper gdb,&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;args
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           This invokes all subprograms of gcc under gdb &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;args, thus the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           invocation of cc1 is gdb &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;args cc1 ....
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ffile&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;prefix&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;map&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;old&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;new
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           When compiling files residing in directory old, record any
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           references to them in the result of the compilation as &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           files resided in directory new instead.  Specifying this
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           option is equivalent to specifying all the individual
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;*-&lt;/span&gt;prefix&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;map options.  This can be used to make reproducible
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           builds that are location independent.  See also
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fmacro&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;prefix&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;map and &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fdebug&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;prefix&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;map.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fplugin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;name.so
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Load the plugin code in file name.so, assumed to be a shared
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           object to be dlopen&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;d by the compiler.  The base name of the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           shared object file is used to identify the plugin &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           purposes of argument &lt;span style=&#34;color:#a6e22e&#34;&gt;parsing&lt;/span&gt; (See &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fplugin&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;arg&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           below).  Each plugin should define the callback functions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           specified in the Plugins API.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fplugin&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;arg&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Define an argument called key with a value of value &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           plugin called name.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fdump&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ada&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;spec[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;slim]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           For C and C&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; source and include files, generate corresponding
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Ada specs.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fada&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;spec&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;parent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;unit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           In conjunction with &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fdump&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ada&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;spec[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;slim] above, generate Ada
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           specs as child units of parent unit.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fdump&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;go&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;spec&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           For input files in any language, generate corresponding Go
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           declarations in file.  This generates Go &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;const&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;var&amp;#34;&lt;/span&gt;, and &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;func&amp;#34;&lt;/span&gt; declarations which may be a useful way to
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           start writing a Go interface to code written in some other
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           language.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Read command&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;line options from file.  The options read are
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           inserted in place of the original &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;file option.  If file does
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           not exist, or cannot be read, then the option will be treated
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           literally, and not removed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           Options in file are separated by whitespace.  A whitespace
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           character may be included in an option by surrounding the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           entire option in either single or &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; quotes.  Any
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#a6e22e&#34;&gt;character&lt;/span&gt; (including a backslash) may be included by prefixing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           the character to be included with a backslash.  The file may
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           itself contain additional &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;file options; any such options will
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           be processed recursively.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
