<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>计算机组成原理 on shyの考研日志</title>
        <link>http://localhost:1313/npee_learning_log.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</link>
        <description>Recent content in 计算机组成原理 on shyの考研日志</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 05 Sep 2025 23:42:41 +0800</lastBuildDate><atom:link href="http://localhost:1313/npee_learning_log.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>0904学习日志</title>
        <link>http://localhost:1313/npee_learning_log.github.io/posts/0904/</link>
        <pubDate>Fri, 05 Sep 2025 23:42:41 +0800</pubDate>
        
        <guid>http://localhost:1313/npee_learning_log.github.io/posts/0904/</guid>
        <description>&lt;h2 id=&#34;计算机组成原理&#34;&gt;计算机组成原理
&lt;/h2&gt;&lt;h3 id=&#34;指令系统&#34;&gt;指令系统
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;指令集体系结构（ISA）&lt;/p&gt;
&lt;p&gt;ISA规定的内容主要包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;指令格式，指令寻址方式，操作类型，以及每种操作对应的操作数的相应规定&lt;/li&gt;
&lt;li&gt;操作数的类型，操作数寻址方式，以及是按大段方式还是小端方式&lt;/li&gt;
&lt;li&gt;程序可访问的寄存器编号、个数和位数，存储空间的大小和编址方式&lt;/li&gt;
&lt;li&gt;指令执行过程的控制方式等，包括程序计数器、条件码定义等&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指令的基本格式&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;操作码字段&lt;/th&gt;
          &lt;th&gt;地址码字段&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;定长指令字结构，变长指令字结构。主存一般是按字节编址的，所以指令字长通常为字节的整数倍。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;零地址指令&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;OP&lt;/th&gt;
          &lt;th&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一地址指令&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;OP&lt;/th&gt;
          &lt;th&gt;$A_1$&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;二地址指令&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;OP&lt;/th&gt;
          &lt;th&gt;$A_1$&lt;/th&gt;
          &lt;th&gt;$A_2$&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;三地址指令&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;OP&lt;/th&gt;
          &lt;th&gt;$A_1$&lt;/th&gt;
          &lt;th&gt;$A_2$&lt;/th&gt;
          &lt;th&gt;$A_3$（结果）&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;四地址指令&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;OP&lt;/th&gt;
          &lt;th&gt;$A_1$&lt;/th&gt;
          &lt;th&gt;$A_2$&lt;/th&gt;
          &lt;th&gt;$A_3$（结果）&lt;/th&gt;
          &lt;th&gt;$A_4$（下址）&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定长操作码指令格式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;扩展操作码指令格式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指令的操作类型&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据传送MOV，LOAD，STORE，PUSH，POP&lt;/li&gt;
&lt;li&gt;算数和逻辑运算ADD，SUB，MUL，DIV，INC，DEC，AND，OR，NOT，XOR&lt;/li&gt;
&lt;li&gt;移位操作&lt;/li&gt;
&lt;li&gt;转移操作JMP，BRANCH，CALL，RET，TRAP&lt;/li&gt;
&lt;li&gt;输入输出操作&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;指令的寻址方式&#34;&gt;指令的寻址方式
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;指令寻址和数据寻址&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;指令寻址&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;顺序寻址PC+1&lt;/li&gt;
&lt;li&gt;跳跃寻址&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据寻址&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;操作码&lt;/th&gt;
          &lt;th&gt;寻址特征&lt;/th&gt;
          &lt;th&gt;形式地址A&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常见的数据寻址方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;隐含寻址&lt;/li&gt;
&lt;li&gt;立即（数）寻址&lt;/li&gt;
&lt;li&gt;直接寻址&lt;/li&gt;
&lt;li&gt;间接寻址&lt;/li&gt;
&lt;li&gt;寄存器寻址EA=$R_i$&lt;/li&gt;
&lt;li&gt;寄存器间接寻址&lt;/li&gt;
&lt;li&gt;相对寻址&lt;/li&gt;
&lt;li&gt;基址寻址&lt;/li&gt;
&lt;li&gt;变址寻址&lt;/li&gt;
&lt;li&gt;堆栈寻址&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;寻址方式&lt;/th&gt;
          &lt;th&gt;有效地址&lt;/th&gt;
          &lt;th&gt;访存次数&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;立即寻址&lt;/td&gt;
          &lt;td&gt;A即是操作数&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;直接寻址&lt;/td&gt;
          &lt;td&gt;EA=A&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;一次性间接寻址&lt;/td&gt;
          &lt;td&gt;EA=(A)&lt;/td&gt;
          &lt;td&gt;2&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;寄存器寻址&lt;/td&gt;
          &lt;td&gt;EA=$R_i$&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;寄存器间接一次寻址&lt;/td&gt;
          &lt;td&gt;EA=($R_i$)&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;相对寻址&lt;/td&gt;
          &lt;td&gt;EA=(PC)+A&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;基址寻址&lt;/td&gt;
          &lt;td&gt;EA=(BR)+A&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;变址寻址&lt;/td&gt;
          &lt;td&gt;EA=(IX)+A&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>0903学习日志</title>
        <link>http://localhost:1313/npee_learning_log.github.io/posts/0903/</link>
        <pubDate>Fri, 05 Sep 2025 23:00:46 +0800</pubDate>
        
        <guid>http://localhost:1313/npee_learning_log.github.io/posts/0903/</guid>
        <description>&lt;h2 id=&#34;计算机组成原理&#34;&gt;计算机组成原理
&lt;/h2&gt;&lt;h3 id=&#34;虚拟存储器&#34;&gt;虚拟存储器
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;基本概念&lt;/li&gt;
&lt;li&gt;页式虚拟存储器
&lt;ol&gt;
&lt;li&gt;页表&lt;/li&gt;
&lt;li&gt;地址转换&lt;/li&gt;
&lt;li&gt;快表(TLB translation lookaside buffer)&lt;/li&gt;
&lt;li&gt;具有TLB和Cache的多级存储系统&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;段式虚拟存储器&lt;/li&gt;
&lt;li&gt;段页式虚拟存储器&lt;/li&gt;
&lt;li&gt;虚拟存储器与Cache的比较
&lt;ol&gt;
&lt;li&gt;相同之处
&lt;ul&gt;
&lt;li&gt;最终目标都是为了提高系统性能，两者都有容量、速度、价格的梯度&lt;/li&gt;
&lt;li&gt;都把数据划分为小信息块，并作为基本的交换单位，虚存系统的信息块更大&lt;/li&gt;
&lt;li&gt;都有地址映射、替换算法、更新策略等问题&lt;/li&gt;
&lt;li&gt;都依据局部性原理应用快速缓存的思想，将活跃的数据放在相对高速的部件中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不同之处
&lt;ul&gt;
&lt;li&gt;Cache主要解决系统速度，而虚拟存储器却是为了解决主存容量&lt;/li&gt;
&lt;li&gt;Cache全由硬件实现，是硬件存储器，对所有程序员透明；而虚拟存储器由OS和硬件共同实现，是逻辑上的存储器，对系统程序员不透明，但对应用程序员透明&lt;/li&gt;
&lt;li&gt;对于不命中性能影响， 因为CPU的速度约为Cache的10倍，主存的速度为硬件的100倍以上，因此虚拟存储器系统不命中时对系统性能影响更大&lt;/li&gt;
&lt;li&gt;CPU与Cache和主存都建立了直接访问通道，而辅存与CPU没有直接通路。也就是说在Cache不命中时能和CPU直接通信，同时将数据调入Cache；而虚拟存储器系统不命中时，只能先由硬盘调入主存，而不能直接和CPU通信&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>0902学习日志</title>
        <link>http://localhost:1313/npee_learning_log.github.io/posts/0902/</link>
        <pubDate>Wed, 03 Sep 2025 22:37:10 +0800</pubDate>
        
        <guid>http://localhost:1313/npee_learning_log.github.io/posts/0902/</guid>
        <description>&lt;h2 id=&#34;计算机组成原理&#34;&gt;计算机组成原理
&lt;/h2&gt;&lt;h3 id=&#34;主存储器与cpu的连接&#34;&gt;主存储器与CPU的连接
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;连接原理：
&lt;ul&gt;
&lt;li&gt;主存储器通过数据总线、地址总线和控制总线与CPU连接&lt;/li&gt;
&lt;li&gt;数据总线的位数与工作频率的乘积正比于数据传输速率&lt;/li&gt;
&lt;li&gt;地址总线的位数决定了可寻址的最大内存空间&lt;/li&gt;
&lt;li&gt;控制总线(读/写)指出总线周期的类型和本次输入/输出操作完成的时刻&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;主存容量的扩展
&lt;ul&gt;
&lt;li&gt;位扩展法&lt;/li&gt;
&lt;li&gt;字扩展法&lt;/li&gt;
&lt;li&gt;位字同时扩展法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;存储芯片的地址分配和片选
&lt;ul&gt;
&lt;li&gt;线选法&lt;/li&gt;
&lt;li&gt;译码片选法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;存储器与CPU的连接
&lt;ul&gt;
&lt;li&gt;合理选择存储芯片&lt;/li&gt;
&lt;li&gt;地址线的连接(cpu的地址线通常比芯片的地址线多，地位连接，高位片选)&lt;/li&gt;
&lt;li&gt;数据线的连接&lt;/li&gt;
&lt;li&gt;读写命令线的连接&lt;/li&gt;
&lt;li&gt;片选线的连接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;外部存储器&#34;&gt;外部存储器
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;磁盘存储器&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;组成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;磁盘驱动器&lt;/li&gt;
&lt;li&gt;磁盘控制器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;存储区域&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;磁头数&lt;/li&gt;
&lt;li&gt;柱面数&lt;/li&gt;
&lt;li&gt;扇区数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;性能指标&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;记录密度&lt;/li&gt;
&lt;li&gt;磁盘的容量 = 记录面数 * 柱面数* 每道扇区数 * 每个扇区的容量&lt;/li&gt;
&lt;li&gt;存取时间&lt;/li&gt;
&lt;li&gt;数据传输速率&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;磁盘地址&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;柱面号（磁道号）&lt;/th&gt;
          &lt;th&gt;盘面号（磁头）&lt;/th&gt;
          &lt;th&gt;扇区号&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;磁盘的工作过程&lt;/p&gt;
&lt;p&gt;寻址、读盘、写盘。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;取控制字&lt;/li&gt;
&lt;li&gt;执行控制字&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;磁盘阵列（RAID）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;RAID0：无冗余和无校验的磁盘阵列&lt;/li&gt;
&lt;li&gt;RAID1：镜像磁盘阵列&lt;/li&gt;
&lt;li&gt;RAID2：采用纠错的海明码的磁盘阵列&lt;/li&gt;
&lt;li&gt;RAID3：位交叉奇偶校验的磁盘阵列&lt;/li&gt;
&lt;li&gt;RAID4：块交叉奇偶校验的磁盘阵列&lt;/li&gt;
&lt;li&gt;RAID5：无独立校验的奇偶校验磁盘阵列&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;固态硬盘（SSD）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;劣势：随机写很慢，擦除块较慢&lt;/li&gt;
&lt;li&gt;优势：
&lt;ol&gt;
&lt;li&gt;半导体存储器，没有移动部件，随机访问速度比磁盘块很多，无噪音和震动；&lt;/li&gt;
&lt;li&gt;能耗低，抗震性好，安全性高&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;磨损均衡
&lt;ol&gt;
&lt;li&gt;动态磨损均衡&lt;/li&gt;
&lt;li&gt;静态磨损均衡（操作系统重合知识点）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;高速缓冲存储器cache&#34;&gt;高速缓冲存储器Cache
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;程序访问的局部性原理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cache的基本工作原理&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当CPU发出读请求时：若命中，则将访存地址转换成Cache地址。直接对Cache进行读操作；否则，需要访问主存，并把此字所在的块一次性的从主存调入Cache。若满，则根据某种替换算法，用这个块替换。整个过程由硬件实现。&lt;/li&gt;
&lt;li&gt;当CPU发出写请求时：若命中，有可能会遇到Cache与主存中的内容不一致的问题。需要按照一定的写策略进行处理。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cache的命中率计算&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cache和主存的映射方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;直接映射&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;标记&lt;/th&gt;
          &lt;th&gt;Cache行号&lt;/th&gt;
          &lt;th&gt;块内地址&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;全相联映射&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;标记&lt;/th&gt;
          &lt;th&gt;块内地址&lt;/th&gt;
          &lt;th&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组相联映射&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;标记&lt;/th&gt;
          &lt;th&gt;组号&lt;/th&gt;
          &lt;th&gt;块内地址&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cache中主存块的替换算法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;随机算法&lt;/li&gt;
&lt;li&gt;FIFO算法&lt;/li&gt;
&lt;li&gt;LRU算法&lt;/li&gt;
&lt;li&gt;最不经常使用算法&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cache的一致性问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;全写法（直写法、write-through）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;写缓冲&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回写法（wirte-back）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;脏位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;写分配法(write-allocate)（写不命中）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;非写分配法(not-write-allocate)（写不命中）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​&lt;/p&gt;
</description>
        </item>
        <item>
        <title>0901学习日志</title>
        <link>http://localhost:1313/npee_learning_log.github.io/posts/0901/</link>
        <pubDate>Wed, 03 Sep 2025 22:21:06 +0800</pubDate>
        
        <guid>http://localhost:1313/npee_learning_log.github.io/posts/0901/</guid>
        <description>&lt;h2 id=&#34;计算机组成原理-存储系统&#34;&gt;计算机组成原理-存储系统
&lt;/h2&gt;&lt;h3 id=&#34;存储器的分类&#34;&gt;存储器的分类
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;按作用（层次）分类
&lt;ol&gt;
&lt;li&gt;主存储器&lt;/li&gt;
&lt;li&gt;辅助存储器&lt;/li&gt;
&lt;li&gt;高速缓冲存储器&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;按存储介质分类
&lt;ol&gt;
&lt;li&gt;随机存储器RAM&lt;/li&gt;
&lt;li&gt;只读存储器ROM&lt;/li&gt;
&lt;li&gt;串行访问存储器&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;按信息的可保存性分类
&lt;ol&gt;
&lt;li&gt;易失性存储器&lt;/li&gt;
&lt;li&gt;非易失性存储器&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;存储器的性能指标&#34;&gt;存储器的性能指标
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;存储容量&lt;/li&gt;
&lt;li&gt;单位成本&lt;/li&gt;
&lt;li&gt;存储速度&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;多级层次的存储系统&#34;&gt;多级层次的存储系统
&lt;/h3&gt;&lt;p&gt;主要思想：上一层的存储器作为低一层存储器的高速缓存&lt;/p&gt;
&lt;h3 id=&#34;sram芯片和dram芯片&#34;&gt;SRAM芯片和DRAM芯片
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;SRAM芯片的工作原理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DRAM芯片的工作原理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DRAM芯片的读写周期&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SRAM和DRAM的比较&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;存储芯片的内部结构&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;只读存储器&#34;&gt;只读存储器
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;只读存储器的特点&lt;/li&gt;
&lt;li&gt;ROM的类型
&lt;ol&gt;
&lt;li&gt;掩模式只读存储器MROM&lt;/li&gt;
&lt;li&gt;一次可编程只读存储器PROM&lt;/li&gt;
&lt;li&gt;可擦除可编程只读存储器EPROM&lt;/li&gt;
&lt;li&gt;Flash存储器&lt;/li&gt;
&lt;li&gt;固态硬盘&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;主存储器的基本组成&#34;&gt;主存储器的基本组成
&lt;/h3&gt;&lt;h3 id=&#34;多模块存储器&#34;&gt;多模块存储器
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;单体多字存储器&lt;/li&gt;
&lt;li&gt;多体并行存储器
&lt;ol&gt;
&lt;li&gt;高位交叉编址&lt;/li&gt;
&lt;li&gt;低位交叉编址&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;马克思主义原理&#34;&gt;马克思主义原理
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;考点一：什么是马克思主义？&lt;/li&gt;
&lt;li&gt;考点二：马克思注意产生的社会根源、阶级基础和思想渊源&lt;/li&gt;
&lt;li&gt;考点三：马克思主义的发展&lt;/li&gt;
&lt;li&gt;考点四：马克思主义的中国化时代化&lt;/li&gt;
&lt;li&gt;考点五：习近平新时代中国特色社会主义思想的世界观和方法论&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>0827.1学习日志</title>
        <link>http://localhost:1313/npee_learning_log.github.io/posts/0827.1/</link>
        <pubDate>Wed, 27 Aug 2025 19:12:07 +0800</pubDate>
        
        <guid>http://localhost:1313/npee_learning_log.github.io/posts/0827.1/</guid>
        <description>&lt;h2 id=&#34;计算机组成原理&#34;&gt;计算机组成原理
&lt;/h2&gt;&lt;h3 id=&#34;数据的表示和运算&#34;&gt;数据的表示和运算
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进位计数制及其相互转换&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;进位计数法&lt;/li&gt;
&lt;li&gt;不同进制之间的相互转换（十进制小数转换为二进制小数）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定点数的编码表示&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;真值与机器数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;机器数的定点表示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定点小数&lt;/li&gt;
&lt;li&gt;定点整数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;原码&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;最高位为符号位，对于一个n+1位的原码数，其表示范围为.
&lt;/p&gt;
$$
         -(2^n-1)\leq x \leq 2^n-1
         $$&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单直观&lt;/li&gt;
&lt;li&gt;乘除实现简单&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缺点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0表示不唯一&lt;/li&gt;
&lt;li&gt;加减法复杂&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;补码&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;定义（n位）
&lt;/p&gt;
$$
         [x]_{\text{补}}= (2^n + x )\mod2^n
         $$&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;负数补码的方法：最高位为1，各位取反，末位加1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变形补码：双符号位&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;反码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;移码&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;整数的表示&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无符号整数&lt;/li&gt;
&lt;li&gt;有符号整数&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C语言中的整数类型及类型转换&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;有符号无符号转换&lt;/p&gt;
&lt;p&gt;机器数不变，解释方式发生改变&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不同字长&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;0扩展&lt;/li&gt;
&lt;li&gt;符号扩展&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;运算方法和运算电路&#34;&gt;运算方法和运算电路
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;基本运算部件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;带标志加法器&lt;/li&gt;
&lt;li&gt;算数逻辑单元(ALU )&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定点数的位移运算&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;逻辑移位&lt;/li&gt;
&lt;li&gt;算术移位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定点数的加减运算&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;补码的加减运算&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;逢二进一&lt;/li&gt;
&lt;li&gt;加法，补码直接相加；减法，被减数与-减数的补码相加。&lt;/li&gt;
&lt;li&gt;符号位一起参与运算&lt;/li&gt;
&lt;li&gt;最终结果高位丢弃&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;溢出判别方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;一位符号位&lt;/p&gt;
&lt;p&gt;操作数符号相同且与结果不同，即溢出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;双符号位&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;00：正数，无溢出&lt;/li&gt;
&lt;li&gt;01：正数，溢出&lt;/li&gt;
&lt;li&gt;11：负数，无溢出&lt;/li&gt;
&lt;li&gt;10：负数，溢出&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;采用一位符号位根据数值位的进位情况判断溢出&lt;/p&gt;
&lt;p&gt;符号位的进位与最高数位的进位相同，则无溢出，否则溢出。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加减运算电路&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;CF&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OF&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ZF&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SF&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;定点数的乘除运算&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定点乘法运算
&lt;ul&gt;
&lt;li&gt;基本原理&lt;/li&gt;
&lt;li&gt;乘法运算电路&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;除法运算
&lt;ul&gt;
&lt;li&gt;基本原理&lt;/li&gt;
&lt;li&gt;除法运算电路&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>0818学习笔记</title>
        <link>http://localhost:1313/npee_learning_log.github.io/memo/0818/</link>
        <pubDate>Mon, 18 Aug 2025 14:04:16 +0800</pubDate>
        
        <guid>http://localhost:1313/npee_learning_log.github.io/memo/0818/</guid>
        <description>&lt;h2 id=&#34;计算机组成原理&#34;&gt;计算机组成原理
&lt;/h2&gt;&lt;h3 id=&#34;朝花夕拾&#34;&gt;朝花夕拾
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;机器字长、指令字长、存储字长：
&lt;ul&gt;
&lt;li&gt;机器字长等于CPU内部的运算器位数和通用寄存器宽度。&lt;/li&gt;
&lt;li&gt;一个存储单元中的位数称为存储字长。&lt;/li&gt;
&lt;li&gt;指令字长取决于指令的功能和格式，可以单字长、半字长或双字长。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;即使是相同的高级语言程序在不同的计算机上进行编译生成的机器指令条数也有可能不同。&lt;/li&gt;
&lt;li&gt;IR,MAR,MDR是CPU内部工作状态寄存器，对程序员透明（不可见）。&lt;/li&gt;
&lt;li&gt;时钟频率不会影响CPI。&lt;/li&gt;
&lt;li&gt;字长也是评价计算机系统性能的指标。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>0813学习日志</title>
        <link>http://localhost:1313/npee_learning_log.github.io/posts/0813/</link>
        <pubDate>Wed, 13 Aug 2025 09:45:22 +0800</pubDate>
        
        <guid>http://localhost:1313/npee_learning_log.github.io/posts/0813/</guid>
        <description>&lt;h2 id=&#34;计算机组成原理&#34;&gt;计算机组成原理
&lt;/h2&gt;&lt;h3 id=&#34;计算机系统概述&#34;&gt;计算机系统概述
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;冯诺依曼计算机的特点
&lt;ol&gt;
&lt;li&gt;采用“存储程序”的工作方式&lt;/li&gt;
&lt;li&gt;计算机硬件系统由运算器、存储器、控制器、输入设备和输出设备五大设备类型&lt;/li&gt;
&lt;li&gt;指令和数据以同等地位存储在存储器中，形式上没有任何区别，但计算机应能区分它们&lt;/li&gt;
&lt;li&gt;指令和数据均用二进制代码表示&lt;/li&gt;
&lt;li&gt;指令由操作码和地址码组成，操作码指出操作的类型，地址码指出操作数的地址&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;计算机的功能部件
&lt;ol&gt;
&lt;li&gt;输入设备&lt;/li&gt;
&lt;li&gt;输出设备&lt;/li&gt;
&lt;li&gt;存储器&lt;/li&gt;
&lt;li&gt;运算器&lt;/li&gt;
&lt;li&gt;控制器&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;计算机软件
&lt;ol&gt;
&lt;li&gt;系统软件和应用软件&lt;/li&gt;
&lt;li&gt;三个级别的语言&lt;/li&gt;
&lt;li&gt;软件和硬件的逻辑功能等价性&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;计算机系统的层次结构
&lt;ol&gt;
&lt;li&gt;微程序机器层&lt;/li&gt;
&lt;li&gt;传统机器语言层&lt;/li&gt;
&lt;li&gt;操作系统层&lt;/li&gt;
&lt;li&gt;汇编语言层&lt;/li&gt;
&lt;li&gt;高级语言层&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;计算机系统的工作原理
&lt;ol&gt;
&lt;li&gt;“存储程序”工作方式&lt;/li&gt;
&lt;li&gt;从源文件到可执行文件*
&lt;ol&gt;
&lt;li&gt;预处理阶段(pre process)&lt;/li&gt;
&lt;li&gt;编译阶段(compile)&lt;/li&gt;
&lt;li&gt;汇编阶段(assemble)&lt;/li&gt;
&lt;li&gt;链接阶段(link)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;指令执行过程的描述
&lt;ol&gt;
&lt;li&gt;取指令&lt;/li&gt;
&lt;li&gt;分析指令&lt;/li&gt;
&lt;li&gt;执行指令&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;计算机的性能指标&#34;&gt;计算机的性能指标
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;计算机的主要性能指标&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;机器字长&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据通路带宽&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主存容量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运算速度&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;吞吐量和响应时间&lt;/li&gt;
&lt;li&gt;主频和CPU时钟周期&lt;/li&gt;
&lt;li&gt;CPI(Cycle per Instruction)&lt;/li&gt;
&lt;li&gt;IPS(Instruction per Second)&lt;/li&gt;
&lt;li&gt;CPU执行时间 = CPU时钟周期数/主频 = （指令条数/CPI）/主频&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;CPU的性能取决于三个要素：&lt;strong&gt;主频、CPI和指令条数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;MIPS(Million Instruction per Second) = 指令条数/(执行时间*$10^6$)&lt;/li&gt;
&lt;li&gt;FLOPS(Floating-point Operations Per Second)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基准程序(benchmark)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
